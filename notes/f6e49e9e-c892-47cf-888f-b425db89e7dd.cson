createdAt: "2018-06-07T23:56:53.585Z"
updatedAt: "2018-06-08T07:08:26.233Z"
type: "MARKDOWN_NOTE"
folder: "3e58fc5160629b901708"
title: "Rubyをやる上で覚えておくと良いもの"
content: '''
  Rubyをやる上で覚えておくと良いもの
  
  ## 共通
  
  メソッドの最後に`!`がついているものは破壊的メソッドと呼ばれます。
  破壊的なメソッドは元の値を書き換えます。
  破壊的でない例:
  ```
  ary = [1, 2, 3]
  ary2 = ary.map { |n| n + 1 }
  p ary # => [1, 2, 3]  
  p ary # => [2, 3, 4]
  ```
  
  破壊的な例:
  ```
  ary = [1, 2, 3]
  ary2 = ary.map! { |n| n + 1 }
  p ary # => [2, 3, 4]
  p ary2 # => [2, 3, 4]
  ```
  
  ## 文字列編
  
  - 文字列連結は`str += "hoge"`よりも`str << "hoge"`の方が早い
  
  `String#each_char`
  文字列から一文字ずつ取り出す
  
  `String#rjust`
  `String#ljust`
  `String#center`
  文字列を右寄せ、左寄せ、中央寄せの形式にする
  
  `String#chomp`
  改行文字を削除してくれます。
  
  `String#each_line`
  一行ずつ取り出してくれます。
  
  `String#downcase`
  文字列をすべて小文字にしてくれる
  小文字 -> 大文字は`upcase`
  
  
  ## 配列編
  
  `Array#repeated_permutation`
  配列の要素からn個取り出したときのすべての組み合わせを返す
  
  `Enumerator#with_index`
  eachとか、mapとか使ったときにその要素のindexもとりたいことって在ると思うんです。
  eachやmapはEnumeratorというクラスなので
  `[1, 2, 3].each.with_index { |number, index|  }`
  といったように取得できます。
  
'''
tags: []
isStarred: false
isTrashed: false
