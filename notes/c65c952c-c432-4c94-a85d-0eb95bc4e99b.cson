createdAt: "2018-05-22T03:10:52.565Z"
updatedAt: "2018-05-22T05:32:36.638Z"
type: "SNIPPET_NOTE"
folder: "e2766da9c6c1b0f60155"
title: "Webフロント開発2018/5月"
description: '''
  Webフロント開発2018/5月
  webpack / babel / flow / eslint / prettier
'''
snippets: [
  {
    name: "zsh"
    mode: "text"
    content: '''
      yarn add -D babel-core babel-loader babel-preset-env \\
      webpack webpack-cli webpack-dev-server \\
      flow-bin prettier eslint \\
      eslint-config-prettier eslint-plugin-prettier babel-preset-flow babel-eslint
      
      touch webpack.config.js .babelrc .eslintrc.yml .prettierignore
      yarn flow init
      
      echo "package.json" >> .prettierignore
      echo "node_modules" >> .gitignore
    '''
  }
  {
    name: "package.json"
    mode: "JSON"
    content: '''
      {
        "name": "",
        "version": "1.0.0",
        "description": "",
        "main": "index.js",
        "repository": "",
        "author": "Arashi Uno",
        "license": "MIT",
        "private": true,
        "scripts": {
          "lint": "eslint src",
          "build:dev": "webpack --mode development",
          "build": "webpack --mode production",
          "watch": "webpack-dev-server --hot"
        },
        "devDependencies": {
          "babel-core": "^6.26.3",
          "babel-eslint": "^8.2.3",
          "babel-loader": "^7.1.4",
          "babel-preset-env": "^1.7.0",
          "babel-preset-flow": "^6.23.0",
          "eslint": "^4.19.1",
          "eslint-config-prettier": "^2.9.0",
          "eslint-plugin-prettier": "^2.6.0",
          "flow-bin": "^0.72.0",
          "prettier": "^1.12.1",
          "webpack": "^4.8.3",
          "webpack-cli": "^2.1.3",
          "webpack-dev-server": "^3.1.4"
        }
      }
    '''
  }
  {
    name: ".eslintrc.yml"
    mode: "YAML"
    content: '''
      parser: 'babel-eslint'
      plugins:
        - prettier
      extends:
        - prettier
        - prettier/flowtype
      rules:
        prettier/prettier:
          - 2
          -
            trailingComma: none
            singleQuote: true
            semi: false
        no-empty-pattern: 0
        prefer-const: 2
        prefer-arrow-callback: 2
        no-unused-vars:
          - 2
          -
            argsIngorePattern: ^_
            varsIgnorePattern: ^_
    '''
  }
  {
    name: ".babelrc"
    mode: "Plain Text"
    content: '''
      {
      	"env": {
          "development": {
            "presets": ["flow", ["env", {"targets": {"chrome": 61} }]]
          },
          "production": {
            "presets": [
              "flow",
              [
                "env",
                {
                  "modules": false
                }
              ]
            ]
          }
        }
      }
    '''
  }
  {
    name: "webpack.config.js"
    mode: "JavaScript"
    content: '''
      module.exports = (env, argv) => {
        return {
          entry: {
            project_name: './src/index.js'
          },
          output: {
            filename: argv.mode === 'production' ? '[name].min.js' : '[name].js',
            path: __dirname + '/dist',
            publicPath: '/'
          },
          devServer: {
            contentBase: 'dist/',
            historyApiFallback: true,
            port: 8888
          },
          module: {
            rules: [
              {
                test: /\\.js$/,
                use: 'babel-loader',
                exclude: /node_modules/
              }
            ]
          }
        }
      }
    '''
  }
]
tags: []
isStarred: false
isTrashed: false
