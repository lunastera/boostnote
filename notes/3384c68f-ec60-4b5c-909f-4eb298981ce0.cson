createdAt: "2018-05-13T00:20:25.740Z"
updatedAt: "2018-05-13T01:22:12.507Z"
type: "MARKDOWN_NOTE"
folder: "f45813ba065419aa5b3c"
title: "抽象化と設計"
content: '''
  # 抽象化と設計
  
  抽象化、それこそ群とモノイドのような感じで「より少ない条件から導かれる妥当な処理を抽象的に書くこと」だと認識していて、抽象クラス+extendsやtraitとかはこれを行うのに非常に強力なツールであると認識している。
  
  そのクラスのインスタンスが知るべきことは何か、制約は何か、具象化できない制約は何かというのを考えながらシグネチャを書くとなんかコードができてる。
  
  意味付けできないクラス抽出と継承はアンチパターンだと思っているけどそもそもそのようなことあるのか 
  
  とあるクラスの構造を決めるときは常にその外部へのインターフェースということを考えつつ設計すればとりあえずうまくいく そうして作られたクラス群は自然と層になったインターフェースになる
'''
tags: [
  "設計"
  "抽象化"
]
isStarred: false
isTrashed: false
